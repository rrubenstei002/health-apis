<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gov.va.api.health</groupId>
    <artifactId>health-apis-parent</artifactId>
    <version>1.0.9-SNAPSHOT</version>
  </parent>
  <artifactId>service-starter</artifactId>
  <packaging>pom</packaging>
  <properties>
    <h2.version>1.4.197</h2.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>gov.va.api.health</groupId>
        <artifactId>service-auto-config</artifactId>
        <version>1.0.9-SNAPSHOT</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>gov.va.dvp</groupId>
      <artifactId>lighthouse-keystore</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
        SSL certs are required for running but not intended to be part of the classpath.
        We want to fetch them so they can be referenced locally from the file system
        for running and testing.
      -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-certs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/certs</outputDirectory>
              <includeArtifactIds>lighthouse-keystore</includeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>copy-h2</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <includeArtifactIds>h2</includeArtifactIds>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <file>
          <exists>src/main/resources/application.properties</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <configuration>
              <images>
                <image>
                  <name>${docker.organization}/${project.artifactId}</name>
                  <build>
                    <from>${docker.baseImage}:${docker.baseVersion}</from>
                    <assembly>
                      <targetDir>/tmp</targetDir>
                      <inline>
                        <files>
                          <file>
                            <source>target/${project.build.finalName}.jar</source>
                          </file>
                        </files>
                      </inline>
                    </assembly>
                    <env>
                      <AWS_APP_NAME>${project.artifactId}</AWS_APP_NAME>
                    </env>
                    <runCmds>
                      <run>mkdir -p /opt/va</run>
                      <run>mv /tmp/${project.build.finalName}.jar /opt/va</run>
                    </runCmds>
                    <tags>
                      <tag>${project.version}</tag>
                      <tag>${docker.tag}</tag>
                    </tags>
                  </build>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>build</id>
                <phase>deploy</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
